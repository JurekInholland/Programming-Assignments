<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCalc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAd
        hwAAHYcBj+XxZQAAA5JJREFUWEfFV/9LU1EU38/9Uv9E9XP+UvhDUFSgm4opLXtzft3ESt2S1WIQJmpi
        OoOIoqZS9AVhpZCWRphzTxJaEaVGW9JPFdHqp9TmitM5d++6Oe98by7zwId3ds+95/N55937dp5Oqx2Y
        C2w1BP3H9CHZYwjKAX3IH9YH5d8EQ8j/Ha8vDSG5B69Swcdn25RlmVvO3MQOJOvVB/0LSACaEJQXcU1f
        /jt5p5ImfTN8CmxB0i68uyUhiTZEUYibcilptZn+w/h2LOW0IOG6gI9thnIq6de2/ODkLlzwTZQoE8Ry
        +rIUGrGxO08kf+8H/awvI1CORBEpKxF75ivLvv+WB7JyzRmBciTmZByiPRHbcPGJBFpcaDkDD0Z8aaF/
        aIxdaW2yAAJxKbQxo6Mm2u20uMzeDJ+//kgL9x/74MnEC7ZWJAARJU6FHu8ez7lg0roFPHw6CVOvZtcS
        gPvB38vI6Q2X6iVDi3PMNuj29K8LtDalAOQkbh29XkUTCLRYtLHSQSoBDMiN5cd3uyiI4AKkI+Xw1lmz
        Cp3VVdDVVgrTQyZ47jVBUXE5vFFiZmO5qgDixgrIAVGQwAXYTBXwp6V2FQbqLTDoMQG8liASkMBaEp/n
        KK3UUAE5QBswLAwi1CrQhRVwYwVmsAJTWIFirACPlWmqgD+M55/+TsUTuIDcMjtcvzvIcEiqww12D26g
        f9zVwUA+jR3EGJ9nqDilLgC5NQmwne8GbjVn2yGytMT8wVEfAxmNUYybo/WyNgHUTIiCBC7g5LlOJS1A
        laMV5hcWme99NMZARmNVjhbmk9mbu1UFEDdVgDoZQTAuILuwmlWhockNewoqoRKJ6HdeRSMD+US+O88M
        9TYrNCCyC9SPIXFjBeSe5AAHF2BDYm5W5wX4FYk9goHRcQYyGrNYSiAybGBorDuqoQJyD1VAEgQYlgVo
        3AMWa3oCiFtHDST1cKIJXMA+Yy24Ll4DV8dV2FtcA3YURL+NJ1wM5NubL6UnADmXm1c8j32iSVyA1dkG
        P+cXGEptTfiHE2b+Te8wA/lfcCwdAcTJyMmoe8XBaPIkLmADHkF0VceMitzJE7mAQsvpZTJ6wdweGGG+
        s/0KA/l3cCzXaAJvZxHDYUlKKYC4FNq4sZYMu9fEiVxAJkgWwDhSten/oyld0QmJjFrnFSL+EWI5Vdpy
        bhvxYaJ658kWa9M36dMs0Tbt4zTZNubzXKf7CwoYNUdv9nO5AAAAAElFTkSuQmCC
</value>
  </data>
</root>